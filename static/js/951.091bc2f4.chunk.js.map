{"version":3,"file":"static/js/951.091bc2f4.chunk.js","mappings":"AAAAA,UAAYC,UACV,MAAM,YAAEC,EAAW,KAAEC,EAAI,aAAEC,EAAe,KAASC,EAAEC,KAErD,IAEE,MAAMC,EAAO,IAAIC,KAAK,CAACN,GAAc,CAAEC,SAGjCM,QAAkBC,kBAAkBH,GAGpCI,EAAgBC,KAAKC,IACzBT,EAAeK,EAAUK,MACzBV,EAAeK,EAAUM,OACzB,GAGIC,EAAWJ,KAAKK,MAAMR,EAAUK,MAAQH,GACxCO,EAAYN,KAAKK,MAAMR,EAAUM,OAASJ,GAG1CQ,EAAe,IAAIC,gBAAgBJ,EAAUE,GACjCC,EAAaE,WAAW,MAChCC,UAAUb,EAAW,EAAG,EAAGO,EAAUE,GAG/C,MAAMK,QAAoBJ,EAAaK,gBAGjCC,EAAUC,IAAIC,gBAAgBJ,GACpCK,YAAY,CAAEC,gBAAiBJ,GACjC,CAAE,MAAOK,GAEPF,YAAY,CAAEE,MAAOA,EAAMC,SAC7B","sources":["imageWorker.js"],"sourcesContent":["onmessage = async (e) => {\n  const { arrayBuffer, type, maxDimension = 2000 } = e.data;\n\n  try {\n    // Create a Blob from the received ArrayBuffer\n    const blob = new Blob([arrayBuffer], { type });\n\n    // Use createImageBitmap, which is available in workers, to handle images\n    const imgBitmap = await createImageBitmap(blob);\n\n    // Determine scaling factors\n    const scaleUpFactor = Math.max(\n      maxDimension / imgBitmap.width,\n      maxDimension / imgBitmap.height,\n      1 // Ensure it scales up if smaller than maxDimension\n    );\n\n    const newWidth = Math.floor(imgBitmap.width * scaleUpFactor);\n    const newHeight = Math.floor(imgBitmap.height * scaleUpFactor);\n\n    // Create an OffscreenCanvas to manipulate the image\n    const targetCanvas = new OffscreenCanvas(newWidth, newHeight);\n    const targetCtx = targetCanvas.getContext('2d');\n    targetCtx.drawImage(imgBitmap, 0, 0, newWidth, newHeight);\n\n    // Convert the canvas to a Blob and send it back to the main thread as a Blob URL\n    const resizedBlob = await targetCanvas.convertToBlob();\n    \n    // Create a blob URL and send it back to the main thread\n    const blobUrl = URL.createObjectURL(resizedBlob);\n    postMessage({ resizedImageUrl: blobUrl });\n  } catch (error) {\n    // Send an error message back to the main thread if something goes wrong\n    postMessage({ error: error.message });\n  }\n};"],"names":["onmessage","async","arrayBuffer","type","maxDimension","e","data","blob","Blob","imgBitmap","createImageBitmap","scaleUpFactor","Math","max","width","height","newWidth","floor","newHeight","targetCanvas","OffscreenCanvas","getContext","drawImage","resizedBlob","convertToBlob","blobUrl","URL","createObjectURL","postMessage","resizedImageUrl","error","message"],"sourceRoot":""}